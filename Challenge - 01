Implementing a Stack

Problem Statement:
The stack is one of the simplest and most important data structures in programming. It organizes objects based on the Last In - First Out (LIFO) principle, where the last object added is the first one to be removed.
Task is to implement a stack data structure in Apex with the following methods:
Push: Add an object to the top of the stack.
Pop: Remove the object at the top of the stack.
Peek: Return the object at the top of the stack without removing it.
Size: Return the number of objects in the stack.
IsEmpty: Return true if the stack is empty, and false otherwise.

Solution
Hereâ€™s the Apex implementation of the stack:
public class Stack {
    // List to hold the stack elements
    List<Object> newObj = new List<Object>();
    
    // Add an object to the top of the stack
    public void push(Object obj) {
        this.newObj.add(obj);
    }
    
    // Remove and return the object at the top of the stack
    public Object pop() {
        if (this.size() > 0) {
            return this.newObj.remove(this.size() - 1);
        }
        return null;
    }
    
    // Return the size of the stack
    public Integer size() {
        return this.newObj.size();
    }
    
    // Return the object at the top of the stack without removing it
    public Object peek() {
        if (this.size() > 0) {
            return this.newObj.get(this.size() - 1);
        }
        return null;
    }
    
    // Check if the stack is empty
    public Boolean isEmpty() {
        return this.newObj.size() == 0;
    }
}
